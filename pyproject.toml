[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "checklog-odoo"
dynamic = ["version"]
description = 'Check if an odoo log file contains error, with the possibility to ignore some errors based on regular expressions'
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
keywords = []
authors = [
  { name = "St√©phane Bidoul", email = "stephane.bidoul@acsone.eu" },
  { name = "Benoit Aimont", email = "benoit.aimont@acsone.eu" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "click",
  "tomli ; python_version < '3.11'",
]

[project.urls]
Documentation = "https://github.com/acsone/checklog-odoo#readme"
Issues = "https://github.com/acsone/checklog-odoo/issues"
Source = "https://github.com/acsone/checklog-odoo"

[project.scripts]
checklog-odoo = "checklog_odoo.checklog:checklog_odoo"

[project.optional-dependencies]
test = [
    "pytest",
    "coverage[toml]",
]

[tool.hatch.version]
source = "vcs"

###################################################################################
# ruff
#

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["checklog_odoo"]

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101"]

###################################################################################
# coverage
#

[tool.coverage.run]
branch = true
source_pkgs = ["checklog-odoo"]

[tool.coverage.paths]
source = ["src", ".tox/*/site-packages"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
]
